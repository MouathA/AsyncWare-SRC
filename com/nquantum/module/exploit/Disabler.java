package com.nquantum.module.exploit;

import java.util.concurrent.*;
import com.nquantum.util.time.*;
import com.nquantum.*;
import com.mojang.realmsclient.gui.*;
import com.nquantum.event.*;
import com.nquantum.module.*;
import com.nquantum.util.math.*;
import net.minecraft.network.*;
import com.nquantum.util.*;
import net.minecraft.network.play.client.*;
import ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.settings.*;
import com.nquantum.event.impl.*;
import java.util.*;
import com.nquantum.notification.*;

public class Disabler extends Module
{
    private static final CopyOnWriteArrayList transList;
    double x;
    Timer timer;
    private int current;
    private static final ArrayList transactions;
    private ArrayList packets;
    private static final SplittableRandom rng;
    double z;
    double y;
    private int iFaithful;
    
    @Punjabi
    @Override
    public void onUpdate(final EventUpdate eventUpdate) {
        final String valString = Asyncware.instance.settingsManager.getSettingByName("Disabler Mode").getValString();
        this.setDisplayName("Disabler " + ChatFormatting.GRAY + valString);
        if (valString.equalsIgnoreCase(ChatFormatting.DARK_PURPLE + "Watchdog") && this.timer.hasTimeElapsed(3000L, true)) {
            this.toggle();
        }
    }
    
    public Disabler() {
        super("Disabler", 0, Category.EXPLOIT);
        this.packets = new ArrayList();
        this.iFaithful = 0;
    }
    
    public long Xorshift32(long n) {
        n ^= n << 31;
        n ^= n >>> 32;
        n ^= n << 3;
        return n;
    }
    
    @Punjabi
    public void onSendPacket(final EventSendPacket eventSendPacket) {
        final String valString = Asyncware.instance.settingsManager.getSettingByName("Disabler Mode").getValString();
        if (valString.equalsIgnoreCase("Faithful MC")) {
            if (eventSendPacket.getPacket() instanceof C0BPacketEntityAction) {
                eventSendPacket.setCancelled(true);
            }
            if (this.mc.thePlayer != null && eventSendPacket.getPacket() instanceof C00PacketKeepAlive) {
                final C00PacketKeepAlive c00PacketKeepAlive = (C00PacketKeepAlive)eventSendPacket.getPacket();
                c00PacketKeepAlive.key -= RngUtil.getRandomInRange(20, 45);
            }
            if (this.mc.thePlayer != null && this.mc.thePlayer.getDistance(this.mc.thePlayer.prevPosX, this.mc.thePlayer.prevPosY, this.mc.thePlayer.prevPosZ) > 0.6 && eventSendPacket.getPacket() instanceof C03PacketPlayer) {
                if (this.iFaithful > 2) {
                    PacketUtil.sendPacketPlayerNoEvent(new C03PacketPlayer.C04PacketPlayerPosition(this.mc.thePlayer.prevPosX + (this.mc.thePlayer.posX - this.mc.thePlayer.prevPosX) / 2.0, this.mc.thePlayer.prevPosY + (this.mc.thePlayer.posY - this.mc.thePlayer.prevPosY) / 2.0, this.mc.thePlayer.prevPosZ + (this.mc.thePlayer.posZ - this.mc.thePlayer.prevPosZ) / 2.0, true));
                    this.iFaithful = 0;
                }
                else {
                    eventSendPacket.setCancelled(true);
                    PacketUtil.sendPacketPlayerNoEvent(new C00PacketKeepAlive(-2147483647));
                }
                ++this.iFaithful;
            }
        }
        if (valString.equalsIgnoreCase(ChatFormatting.AQUA + "Blue") && this.timer.hasTimeElapsed(3000L, true) && (eventSendPacket.getPacket() instanceof C03PacketPlayer || eventSendPacket.getPacket() instanceof C0FPacketConfirmTransaction)) {
            ChatUtil.sendMessage("cancelled " + ((C03PacketPlayer)eventSendPacket.getPacket()).isMoving());
            Disabler.transList.add(eventSendPacket.getPacket());
            eventSendPacket.setCancelled(true);
        }
        if (valString.equalsIgnoreCase("Verus")) {
            if (eventSendPacket.getPacket() instanceof C0FPacketConfirmTransaction) {
                Disabler.transList.add(eventSendPacket.getPacket());
                eventSendPacket.setCancelled(true);
            }
            if (eventSendPacket.getPacket() instanceof C00PacketKeepAlive) {
                ((C00PacketKeepAlive)eventSendPacket.getPacket()).key = -2;
            }
            if (eventSendPacket.getPacket() instanceof C03PacketPlayer) {
                this.mc.thePlayer.sendQueue.addToSendQueue(new C0CPacketInput());
            }
        }
    }
    
    @Override
    public void setup() {
        super.setup();
        final ArrayList<String> list = new ArrayList<String>();
        list.add("Verus");
        list.add("LunarGG");
        list.add("Ghostly");
        list.add("Faithful MC");
        list.add(ChatFormatting.BLUE + "Payload 1");
        list.add(ChatFormatting.BLUE + "Payload 2");
        list.add(ChatFormatting.AQUA + "Blue");
        list.add(ChatFormatting.DARK_PURPLE + "Watchdog");
        list.add(ChatFormatting.BOLD + "Null Position");
        list.add(ChatFormatting.GOLD + "Kokscraft SV+G");
        list.add("AACV5 Movement");
        Asyncware.instance.settingsManager.rSetting(new Setting("Disabler Mode", this, "Verus", list));
    }
    
    @Punjabi
    @Override
    public void onPre(final EventPreMotionUpdate eventPreMotionUpdate) {
        final String valString = Asyncware.instance.settingsManager.getSettingByName("Disabler Mode").getValString();
        if (valString.equalsIgnoreCase(ChatFormatting.GOLD + "Kokscraft SV+G")) {
            PacketUtil.sendPacketNoEvent(new C00PacketKeepAlive(-1));
        }
        if (valString.equalsIgnoreCase("Verus")) {
            if (this.mc.thePlayer.ticksExisted < 5 && this.mc.theWorld != null) {
                this.current = 0;
                Disabler.transList.clear();
            }
            if (this.mc.thePlayer.ticksExisted % 100 == 0 && Disabler.transList.size() > 0 && Disabler.transList.size() - 1 > this.current) {
                PacketUtil.sendPacketNoEvent(Disabler.transList.get(++this.current));
            }
            if (this.mc.thePlayer.ticksExisted % 1000 == 0) {
                this.current = 0;
                Disabler.transList.clear();
            }
            if (this.timer.hasTimeElapsed(1220L, true)) {
                ChatUtil.sendMessagePrefix("Trying to disable verus...");
            }
            PacketUtil.sendPacketNoEvent(new C00PacketKeepAlive(-1));
            if (this.mc.thePlayer.ticksExisted % 60 == 0) {
                this.mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C06PacketPlayerPosLook(this.mc.thePlayer.posX, this.mc.thePlayer.posY + 5997.7235, this.mc.thePlayer.posZ, this.mc.thePlayer.rotationYaw, this.mc.thePlayer.rotationPitch, true));
                this.mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C06PacketPlayerPosLook(this.mc.thePlayer.posX, this.mc.thePlayer.posY - 5997.7235, this.mc.thePlayer.posZ, this.mc.thePlayer.rotationYaw, this.mc.thePlayer.rotationPitch, false));
                this.mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C06PacketPlayerPosLook(this.mc.thePlayer.posX, this.mc.thePlayer.posY + 5997.7235, this.mc.thePlayer.posZ, this.mc.thePlayer.rotationYaw, this.mc.thePlayer.rotationPitch, true));
                this.mc.thePlayer.sendQueue.addToSendQueue(new C03PacketPlayer.C06PacketPlayerPosLook(this.mc.thePlayer.posX, this.mc.thePlayer.posY - 5997.7235, this.mc.thePlayer.posZ, this.mc.thePlayer.rotationYaw, this.mc.thePlayer.rotationPitch, false));
            }
            if (this.mc.thePlayer.ticksExisted > 1200 && this.mc.thePlayer.ticksExisted < 1300) {
                ChatUtil.sendMessagePrefix("Disabled Verus.");
            }
        }
    }
    
    @Override
    public void onDisable() {
        super.onDisable();
        final Iterator<Packet> iterator = this.packets.iterator();
        while (iterator.hasNext()) {
            if (iterator.next() != null) {
                final Iterator<Packet> iterator2 = Disabler.transList.iterator();
                while (iterator2.hasNext()) {
                    PacketUtil.sendPacket(iterator2.next());
                }
            }
        }
    }
    
    static {
        transList = new CopyOnWriteArrayList();
        transactions = new ArrayList();
        rng = new SplittableRandom();
    }
    
    @Override
    public void onEnable() {
        final String valString = Asyncware.instance.settingsManager.getSettingByName("Disabler Mode").getValString();
        super.onEnable();
        this.timer = new Timer();
        if (valString.equalsIgnoreCase(ChatFormatting.GOLD + "Kokscraft SV+G")) {
            NotificationManager.show(new Notification(NotificationType.INFO, "Disabler", "Wait 10 seconds for disabler to work.", 10));
            NotificationManager.show(new Notification(NotificationType.SUCCESS, "Disabler", "Disabled!", 3));
        }
        if (valString.equalsIgnoreCase(ChatFormatting.DARK_PURPLE + "Watchdog")) {
            NotificationManager.show(new Notification(NotificationType.INFO, "Disabler", "Lasts for 3 seconds!", 3));
        }
    }
}
